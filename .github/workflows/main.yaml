name: Symfony Docker CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    name: Build, Test & Run Docker Container
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout Repository
      - name: Checkout Repository
        uses: actions/checkout@v4

      # Step 2: Set up Docker Buildx (if needed for multi-platform builds)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Step 3: Build Docker Image
      - name: Build Docker Image
        run: |
          docker build -t design-oop:latest .

      # Step 4: Run PHPUnit Tests inside the Docker container
      - name: Run PHP Tests (PHPUnit)
        run: |
          docker run --rm design-oop:latest vendor/bin/phpunit --testdox

      # Step 5: Push Docker Image to Docker Hub (if needed, requires credentials)
      # You can uncomment the below step if you want to push the image to Docker Hub
      # - name: Log in to Docker Hub
      #   uses: docker/login-action@v3
      #   with:
      #     username: ${{ secrets.DOCKER_USERNAME }}
      #     password: ${{ secrets.DOCKER_PASSWORD }}

      # - name: Push Docker Image to Docker Hub
      #   run: |
      #     docker push design-oop:latest


  # deploy:
  #   name: Deploy to Production Server
  #   runs-on: ubuntu-latest
  #   needs: build
  #   if: github.ref == 'refs/heads/main'

  #   steps:
  #     - name: Deploy via SSH
  #       uses: appleboy/ssh-action@v0.1.10
  #       with:
  #         host: ${{ secrets.SSH_HOST }}
  #         username: ${{ secrets.SSH_USER }}
  #         password: ${{ secrets.SSH_PASS }}
  #         script: |
  #           docker pull ${{ secrets.DOCKER_USERNAME }}/design-oop:latest
  #           docker stop symfony_app || true
  #           docker rm symfony_app || true
  #           docker run -d --name symfony_app -p 80:80 ${{ secrets.DOCKER_USERNAME }}/design-oop:latest
